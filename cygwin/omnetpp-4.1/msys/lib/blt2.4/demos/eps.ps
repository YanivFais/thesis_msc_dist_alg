%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .layout
%%CreationDate: Tue Jul 29 12:06:36 2003
%%BoundingBox: 101 238 511 555
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/Euro/space/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
/circumflex/perthousand/Scaron/guilsinglleft/OE/space/Zcaron/space
/space/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
/tilde/trademark/scaron/guilsinglright/oe/space/zcaron/Ydieresis
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.7502 0.7502 scale
-279 -210 translate
7 421 moveto 551 421 lineto 551 0 lineto 7 0 lineto closepath clip newpath
gsave

% including file "C:\home\tools\TCL-84~1.2\lib\blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
20 -175 translate
1 1 scale
-72 -104 translate
72 104 539 687 SetClipRegion
%% including "./images/out.ps"

%%EndPreview





% including file "../library/bltGraph.pro"



%

% PostScript prolog file of the BLT graph widget.

%

% Copyright 1989-1992 Regents of the University of California.

% Permission to use, copy, modify, and distribute this

% software and its documentation for any purpose and without

% fee is hereby granted, provided that the above copyright

% notice appear in all copies.  The University of California

% makes no representations about the suitability of this

% software for any purpose.  It is provided "as is" without

% express or implied warranty.

%

% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.

%

% Permission to use, copy, modify, and distribute this software and its

% documentation for any purpose and without fee is hereby granted, provided

% that the above copyright notice appear in all copies and that both that the

% copyright notice and warranty disclaimer appear in supporting documentation,

% and that the names of Lucent Technologies any of their entities not be used

% in advertising or publicity pertaining to distribution of the software

% without specific, written prior permission.

%

% Lucent Technologies disclaims all warranties with regard to this software,

% including all implied warranties of merchantability and fitness.  In no event

% shall Lucent Technologies be liable for any special, indirect or

% consequential damages or any damages whatsoever resulting from loss of use,

% data or profits, whether in an action of contract, negligence or other

% tortuous action, arising out of or in connection with the use or performance

% of this software.

%



200 dict begin



/BaseRatio 1.3467736870885982 def	% Ratio triangle base / symbol size

/BgColorProc 0 def			% Background color routine (symbols)

/DrawSymbolProc 0 def			% Routine to draw symbol outline/fill

/StippleProc 0 def			% Stipple routine (bar segments)

/DashesProc 0 def			% Dashes routine (line segments)

 

% Define the array ISOLatin1Encoding (which specifies how characters are 

% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript 

% level 2 is supposed to define it, but level 1 doesn't). 

 

systemdict /ISOLatin1Encoding known not { 

  /ISOLatin1Encoding [ 

    /space /space /space /space /space /space /space /space 

    /space /space /space /space /space /space /space /space 

    /space /space /space /space /space /space /space /space 

    /space /space /space /space /space /space /space /space 

    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand 

    /quoteright 

    /parenleft /parenright /asterisk /plus /comma /minus /period /slash 

    /zero /one /two /three /four /five /six /seven 

    /eight /nine /colon /semicolon /less /equal /greater /question 

    /at /A /B /C /D /E /F /G 

    /H /I /J /K /L /M /N /O 

    /P /Q /R /S /T /U /V /W 

    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 

    /quoteleft /a /b /c /d /e /f /g 

    /h /i /j /k /l /m /n /o 

    /p /q /r /s /t /u /v /w 

    /x /y /z /braceleft /bar /braceright /asciitilde /space 

    /space /space /space /space /space /space /space /space 

    /space /space /space /space /space /space /space /space 

    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent 

    /dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron 

    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 

    /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 

    /registered /macron 

    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph 

    /periodcentered 

    /cedillar /onesuperior /ordmasculine /guillemotright /onequarter 

    /onehalf /threequarters /questiondown 

    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 

    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex 

    /Idieresis 

    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 

    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn 

    /germandbls 

    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 

    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex 

    /idieresis 

    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 

    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn 

    /ydieresis 

  ] def 

} if 



% font ISOEncode font 

% This procedure changes the encoding of a font from the default 

% Postscript encoding to ISOLatin1.  It's typically invoked just 

% before invoking "setfont".  The body of this procedure comes from 

% Section 5.6.1 of the Postscript book. 



/ISOEncode { 

  dup length dict

  begin 

    {1 index /FID ne {def} {pop pop} ifelse} forall 

    /Encoding ISOLatin1Encoding def 

    currentdict 

  end 



  % I'm not sure why it's necessary to use "definefont" on this new 

  % font, but it seems to be important; just use the name "Temporary" 

  % for the font. 



  /Temporary exch definefont 

} bind def 



/Stroke {

  gsave

    stroke

  grestore

} def



/Fill {

  gsave

    fill

  grestore

} def



/SetFont { 	

  % Stack: pointSize fontName

  findfont exch scalefont ISOEncode setfont

} def



/Box {

  % Stack: x y width height

  newpath

  exch 4 2 roll moveto

  dup 0 rlineto

  exch 0 exch rlineto

  neg 0 rlineto

  closepath

} def



/SetFgColor {

  % Stack: red green blue

  CL 0 eq { 

    pop pop pop 0 0 0 

  } if

  setrgbcolor

  CL 1 eq { 

    currentgray setgray 

  } if

} def



/SetBgColor {

  % Stack: red green blue

  CL 0 eq { 

    pop pop pop 1 1 1 

  } if

  setrgbcolor

  CL 1 eq { 

    currentgray setgray 

  } if

} def



% The next two definitions are taken from "$tk_library/prolog.ps"



% desiredSize EvenPixels closestSize

%

% The procedure below is used for stippling.  Given the optimal size

% of a dot in a stipple pattern in the current user coordinate system,

% compute the closest size that is an exact multiple of the device's

% pixel size.  This allows stipple patterns to be displayed without

% aliasing effects.



/EvenPixels {

  % Compute exact number of device pixels per stipple dot.

  dup 0 matrix currentmatrix dtransform

  dup mul exch dup mul add sqrt



  % Round to an integer, make sure the number is at least 1, and compute

  % user coord distance corresponding to this.

  dup round dup 1 lt {pop 1} if

  exch div mul

} bind def



% width height string filled StippleFill --

%

% Given a path and other graphics information already set up, this

% procedure will fill the current path in a stippled fashion.  "String"

% contains a proper image description of the stipple pattern and

% "width" and "height" give its dimensions.  If "filled" is true then

% it means that the area to be stippled is gotten by filling the

% current path (e.g. the interior of a polygon); if it's false, the

% area is gotten by stroking the current path (e.g. a wide line).

% Each stipple dot is assumed to be about one unit across in the

% current user coordinate system.



% width height string StippleFill --

%

% Given a path already set up and a clipping region generated from

% it, this procedure will fill the clipping region with a stipple

% pattern.  "String" contains a proper image description of the

% stipple pattern and "width" and "height" give its dimensions.  Each

% stipple dot is assumed to be about one unit across in the current

% user coordinate system.  This procedure trashes the graphics state.



/StippleFill {

    % The following code is needed to work around a NeWSprint bug.



    /tmpstip 1 index def



    % Change the scaling so that one user unit in user coordinates

    % corresponds to the size of one stipple dot.

    1 EvenPixels dup scale



    % Compute the bounding box occupied by the path (which is now

    % the clipping region), and round the lower coordinates down

    % to the nearest starting point for the stipple pattern.  Be

    % careful about negative numbers, since the rounding works

    % differently on them.



    pathbbox

    4 2 roll

    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll

    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll



    % Stack now: width height string y1 y2 x1 x2

    % Below is a doubly-nested for loop to iterate across this area

    % in units of the stipple pattern size, going up columns then

    % across rows, blasting out a stipple-pattern-sized rectangle at

    % each position



    6 index exch {

	2 index 5 index 3 index {

	    % Stack now: width height string y1 y2 x y



	    gsave

	    1 index exch translate

	    5 index 5 index true matrix tmpstip imagemask

	    grestore

	} for

	pop

    } for

    pop pop pop pop pop

} bind def





/LS {	% Stack: x1 y1 x2 y2

  newpath 4 2 roll moveto lineto stroke

} def



/EndText {

  %Stack :

  grestore

} def



/BeginText {

  %Stack :  w h theta centerX centerY

  gsave

    % Translate the origin to the center of bounding box and rotate

    translate neg rotate

    % Translate back to the origin of the text region

    -0.5 mul exch -0.5 mul exch translate

} def



/DrawAdjText {

  %Stack : str strWidth x y

  moveto				% Go to the text position

  exch dup dup 4 2 roll



  % Adjust character widths to get desired overall string width

  % adjust X = (desired width - real width)/#chars



  stringwidth pop sub exch

  length div

  0 3 -1 roll



  % Flip back the scale so that the string is not drawn in reverse



  gsave

    1 -1 scale

    ashow

  grestore

} def



/DrawBitmap {

  % Stack: ?bgColorProc? boolean centerX centerY width height theta imageStr

  gsave

    6 -2 roll translate			% Translate to center of bounding box

    4 1 roll neg rotate			% Rotate by theta

    

    % Find upperleft corner of bounding box

    

    2 copy -.5 mul exch -.5 mul exch translate

    2 copy scale			% Make pixel unit scale

    newpath

    0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto

    closepath

    

    % Fill rectangle with background color

    

    4 -1 roll { 

      gsave 

	4 -1 roll exec fill 

      grestore 

    } if

    

    % Paint the image string into the unit rectangle

    

    2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll

    imagemask

  grestore

}def



% Symbols:



% Skinny-cross

/Sc {

  % Stack: x y symbolSize

  gsave

    3 -2 roll translate 45 rotate

    0 0 3 -1 roll Sp

  grestore

} def



% Skinny-plus

/Sp {

  % Stack: x y symbolSize

  gsave

    3 -2 roll translate

    2 idiv

    dup 2 copy

    newpath neg 0 moveto 0 lineto

    DrawSymbolProc

    newpath neg 0 exch moveto 0 exch lineto

    DrawSymbolProc

  grestore

} def



% Cross

/Cr {

  % Stack: x y symbolSize

  gsave

    3 -2 roll translate 45 rotate

    0 0 3 -1 roll Pl

  grestore

} def



% Plus

/Pl {

  % Stack: x y symbolSize

  gsave

    3 -2 roll translate

    dup 2 idiv

    exch 6 idiv



    %

    %          2   3		The plus/cross symbol is a

    %				closed polygon of 12 points.

    %      0   1   4    5	The diagram to the left

    %           x,y		represents the positions of

    %     11  10   7    6	the points which are computed

    %				below.

    %          9   8

    %



    newpath

    2 copy exch neg exch neg moveto dup neg dup lineto

    2 copy neg exch neg lineto 2 copy exch neg lineto

    dup dup neg lineto 2 copy neg lineto 2 copy lineto

    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto

    dup dup neg exch lineto exch neg exch lineto

    closepath

    DrawSymbolProc

  grestore

} def



% Circle

/Ci {

  % Stack: x y symbolSize

  3 copy pop

  moveto newpath

  2 div 0 360 arc

  closepath DrawSymbolProc

} def



% Square

/Sq {

  % Stack: x y symbolSize

  dup dup 2 div dup

  6 -1 roll exch sub exch

  5 -1 roll exch sub 4 -2 roll Box

  DrawSymbolProc

} def



% Line

/Li {

  % Stack: x y symbolSize

  3 1 roll exch 3 -1 roll 2 div 3 copy

  newpath

  sub exch moveto add exch lineto

  stroke

} def



% Diamond

/Di {

  % Stack: x y symbolSize

  gsave

    3 1 roll translate 45 rotate 0 0 3 -1 roll Sq

  grestore

} def

    

% Triangle

/Tr {

  % Stack: x y symbolSize

  gsave

    3 -2 roll translate

    BaseRatio mul 0.5 mul		% Calculate 1/2 base

    dup 0 exch 30 cos mul		% h1 = height above center point

    neg					% b2 0 -h1

    newpath moveto			% point 1;  b2

    dup 30 sin 30 cos div mul		% h2 = height below center point

    2 copy lineto			% point 2;  b2 h2

    exch neg exch lineto		% 

    closepath

    DrawSymbolProc

  grestore

} def

% Bitmap

/Bm {

  % Stack: x y symbolSize

  gsave

    3 1 roll translate pop DrawSymbolProc

  grestore

} def

    

%%BeginSetup

gsave					% Save the graphics state



% Default line/text style parameters



1 setlinewidth				% width

1 setlinejoin				% join

0 setlinecap				% cap

[] 0 setdash				% dashes



/CL 0 def				% Set color level mode

0 0 0 setrgbcolor			% color



% Transform coordinate system to use X11 coordinates



% Flip the y-axis by changing the origin and reversing the scale,

% making the origin the upper left corner

0.600000 -0.600000 scale

0 -1319 translate



% User defined page layout



%% Set color level

/CL 2 def



% Set origin

120 173 translate



% Landscape orientation

0 972.127 translate

-90 rotate



%% Set max aspect ratio

 1.62292 1.62292 scale



%%EndSetup



14 /Helvetica-Bold SetFont

0.996109 0.996109 0.996109 SetBgColor

69 80 479 333 Box Fill



gsave clip





% Marker "bg" is a bitmap

0.304692 0.929702 0.578134 SetBgColor

newpath 79 90 moveto

539 90 lineto

539 404 lineto

79 404 lineto

79 90  lineto closepath Fill

0 0.542977 0 SetFgColor

  gsave

    79 404 translate

    460 -314 scale

    460 314 true [460 0 0 -314 0 314] {	<000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000040000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000400000000000000000

	000000000000000000000000000000000000000000000000000000000000

	002410000000000000000449010000000000002000000000000000000000

	000000000000000000000000000000002000000000000000000800004A00

	000000000000000220002002010200000080000000000008020000000000

	00002000000000200000000000008000000420000000000800004A000000

	000000000002200020020102000000800000000000080200000000000000

	2000000000200000000000008000000420000100000000A1000000000000

	001011010020881020280000020004000000088040000000000000110201

	411020000000000000020200004000000000804090040020800000200001

	00000002010008800000005110912ADEEFFDBFFFFFFFFEFDFFCAA9BA3EEF

	D72DF36ADDE5AAF400AA5504C00000008040900400208000002000010000

	0002010008800000005110912ADEEFFDBFFFFFFFFEFDFFCAA9BA3EEFD72D

	F36ADDE5AAF400AA5504C000016D572D4E95599695514A02420404200000

	000000000001000000000000000000000000000000244444001129550524

	5525544BEF6DD6DF40000100000000000000000000000000000008100844

	400840000100020808529B5FFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFF

	FFFFFFFFFFFF440001000000000000000000000000000000081008444008

	40000100020808529B5FFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFF

	FFFFFFFF4400097FFFFFFFFFFFFFFFFFFFFFFFFF9FFFFFFFFFFFFFFFFFFF

	FFFFFFFFFFCDDDE0480A20004050C03101003DFBEFFFFDDFFF9FFFFEE57E

	FBBF40000177F5FFEBFFFFFFFFFFFDFFFFEF9D42D21485A084817EDE24F9

	018006000004182060107019C63901071CFF5F7BEEAEB756F7D7EFF6EEBF

	40000177F5FFEBFFFFFFFFFFFDFFFFEF9D42D21485A084817EDE24F90180

	06000004182060107019C63901071CFF5F7BEEAEB756F7D7EFF6EEBF400001

	5F6BE7DFBFFFFEFF736B7FFAD71C08C18C1060C70C1E0F83F86041C41FC1

	E61820761E790B071209831CD2FD6575BBFF4F9ABBB75EF7D54400017BEF

	D7F6DBF6FE77FDFEFFBFBF9E0CC14E1070B70C1C0F87FC7061B400E0B618

	307E13FC07071B4D90FCEFEEDDDFFAEA4774EFEBBEDFF74000017BEFD7F6

	DBF6FE77FDFEFFBFBF9E0CC14E1070B70C1C0F87FC7061B400E0B618307E

	13FC07071B4D90FCEFEEDDDFFAEA4774EFEBBEDFF74000015EDBD7B3FFAB

	FD7F777F72EDEF1E03C27E18703F00FD078FFC01E13C00411F10782E0B7F

	03071F0F835CF6BF7EF5B5BCCED4B75DFA6FAF40002575F5B7D5BEABF53F

	FBEDBDFAF79E0BC96E1070B7083A078FFC60E1B68048B618381C1E7D8307

	1E07839DEFF6EFB7FFFCCFEF7B76EC6FAF50002575F5B7D5BEABF53FFBED

	BDFAF79E0BC96E1070B7083A078FFC60E1B68048B618381C1E7D83071E07

	839DEFF6EFB7FFFCCFEF7B76EC6FAF5000015FBB316BAD7D5D3EEAFF7FAB

	F51C0FC18C1060C70C33038C78204184F0C184093C381070C3C63E06121C

	B6DB3FADF5FDCBBFDFEDBD7FDF400001767D53A7F5FFFCBFB766EEDDB798

	2300092BAA042200002268980056AFDF7FFFFFFFFFFFFFFFFFFFFFFCEFD5

	FFE5FFEDCD7E6B7D753F1B400001767D53A7F5FFFCBFB766EEDDB7982300

	092BAA042200002268980056AFDF7FFFFFFFFFFFFFFFFFFFFFFCEFD5FFE5

	FFEDCD7E6B7D753F1B4000017B3B736BB7BB75BDDBDD6FD6FD9FFFFFFFFF

	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFB

	CADBFAEFFD7D1F44000166DDB3AD9EF5D59FFFFFFFFFFF95A6F524894091

	20082524A4010100000000000000000000000000000200000000000FCDAF

	BF389A9D5F40000166DDB3AD9EF5D59FFFFFFFFFFF95A6F5248940912008

	2524A4010100000000000000000000000000000200000000000FCDAFBF38

	9A9D5F4000017EDCF37AA3FE699800000000000000000000000000000000

	080000000000402000004201592D2AFF7FFDFBEF555B6D6BCF3DFBFC7B3A

	DF40000176EFBB8D3FEEBF13FFFFFFFFFB5EB6AB35A55A4AA54AD54AA954

	0201000100001080000400000000000000000000008B8EFE94802EDFDF50

	000176EFBB8D3FEEBF13FFFFFFFFFB5EB6AB35A55A4AA54AD54AA9540201

	000100001080000400000000000000000000008B8EFE94802EDFDF500001

	7ECEF40B5BFEBB9000000000000000000000000000000000000000000000

	040100080000000000000200000000000093CCBA000200009F4000116E96

	F895877ECF9B010000000000000000000000000000004000000420442010

	0000101000111200100000000000000B4BBF2DA7FAD3DF4100116E96F895

	877ECF9B0100000000000000000000000000000040000004204420100000

	101000111200100000000000000B4BBF2DA7FAD3DF4100017EC6F20EB5DF

	DAAA10420000000000200000041100000000280110000400000004000000

	40400000000000002080841BCB973FFEFFFB1F4000016E56C1F902FAE790

	400000000000200010048000004000088000000000000080002000200100

	0840104412010100102B669F6FFDEFEB534400016E56C1F902FAE7904000

	000000002000100480000040000880000000000000800020002001000840

	104412010100102B669F6FFDEFEB53440001769203F7F97EE39400000400

	000000804100220001000200004200200001000001824200A05436BFE55B

	12E12810004BE72A6BD5FE5B7F4000057E8B27B7793EA3B0011251400502

	94250A4808A4A05A000311291414DBFD17780452A90010021550B56A57C4

	B40400B77A9C57FCDFC9774000057E8B27B7793EA3B00112514005029425

	0A4808A4A05A000311291414DBFD17780452A90010021550B56A57C4B404

	00B77A9C57FCDFC9774000116AA04EDFBE1EA39D07FFFCF9F9A03CF3AF3D

	FFCF5CFD200CFFFF8C3F71C74474163071A071BD381874E3D78B1D1A004F

	FD1EF7D33EBCFF4000017F589FF3F78EB7B407733C70F9807833D61DFEC7

	0D3CD00C73779D3BB8C73C301E397184307EBCD972E3C7972918006DF320

	E4A9FAB41B6400017F589FF3F78EB7B407733C70F9807833D61DFEC70D3C

	D00C73779D3BB8C73C301E397184307EBCD972E3C7972918006DF320E4A9

	FAB41B640001751ABA693D961BA006FB3D7272D83CA5C85DCEC72C3CF439

	1A7B1E7330CF9DDB1CBAF290F91E397972EFE79754BD823B6833DB6EDE7F

	1BC000216A8133F3D9C6B18400737C7272943965E2999EC70D7CF21D7A71

	9E3399C31CB91C797110FA3E39B9B3E7C71F69DC40BDAA97F9F1065FDF40

	00216A8133F3D9C6B18400737C7272943965E2999EC70D7CF21D7A719E33

	99C31CB91C797110FA3E39B9B3E7C71F69DC40BDAA97F9F1065FDF400001

	7BD272DBA57259A824F33DF2F290398AF0DD9ECF28BCF33F407B9E7728CA

	1FC23CFC72993B2F3D19A1EBCFAF410E40CEF51F686A56FBBB4000017752

	F36AF9EA7985097B7C7276583BA470BC9ECF297CF11FF0F28F27B1D83FF3

	3E797E10392F39BF8DEF978F658E60AD6918F9A006BD3F4000017752F36A

	F9EA7985097B7C7276583BA470BC9ECF297CF11FF0F28F27B1D83FF33E79

	7E10392F39BF8DEF978F658E60AD6918F9A006BD3F4000017BA4EAF7A6F3

	59AC01713D727610390A7C992E47657CFA0FFD7A872B12D96FFA3CBCF66B

	1EC7B919B2E737AF569E206F2B3BCCE00E772F4000116AC9F5C02BB9BB18

	02FA7C7272503926BCDDDE97223CF303F9724FAB3ACB81783CB97282BCA7

	B9B910E3C71F4C072055CB32FB000CFEB74800116AC9F5C02BB9BB1802FA

	7C7272503926BCDDDE97223CF303F9724FAB3ACB81783CB97282BCA7B9B9

	10E3C71F4C072055CB32FB000CFEB74800017FC9CD5EB5F9992C20F13CF2

	784139247CBCAECF043C7120787917A709C008791E7972421CCFBD9934EB

	D7A744C79053C5B6FC4086DC5F4000017597EC803B5DDA9800F37D72F2C8

	3D8A1D5D1E872E7CF216B8F2C3D3B0CBB399BCB973864E67391DF2EBCF97

	319F9036AAF5D7880F74DF4000017597EC803B5DDA9800F37D72F2C83D8A

	1D5D1E872E7CF216B8F2C3D3B0CBB399BCB973864E67391DF2EBCF97319F

	9036AAF5D7880F74DF4000017FD3AB003EFAEA1528F23D717AC839265CB9

	1ECF3CBCF31299795BCB9ACF18B89E79710AEE253D5971E7D79B29879019

	5B64FBC016BD574000017B5B7C803BADE8B802FB3CF2F1C81C872CBDBE57

	4E3CC519B8F945CF89CFBCE31673FE3F5F7A7AFD52D5E54DC6B14C0DE6DC

	57E00F697F5000017B5B7C803BADE8B802FB3CF2F1C81C872CBDBE574E3C

	C519B8F945CF89CFBCE31673FE3F5F7A7AFD52D5E54DC6B14C0DE6DC57E0

	0F697F5000016EC75A083ED648A842FC7FFBFBC42E8F867EBF5FBCFD8A3E

	62FDD7F7EBEB1F4512C0210120060000000400120000080CA6F96DA08ED3

	374000116B85A920BBF9F569020100000008003020800010008034000900

	08000400100A0403148C12A9EFA5D7352B6C3F66EC04ABE6BDE00FBAFB40

	00116B85A920BBF9F5690201000000080030208000100080340009000800

	0400100A0403148C12A9EFA5D7352B6C3F66EC04ABE6BDE00FBAFB400001

	7E86FC003F8ADD2809525402AA28082A22C94AA5A55494082C0089255A9D

	E8B40498EA83C2AA3555745AE6D95155560328C4B7600DFBDF4000017F17

	37803D5B72D4006D2BF2B55405D15146C552A554D007D07EAAB96C965350

	01502A01515515A54A55115420612021FECA6FC007504F4000017F173780

	3D5B72D4006D2BF2B55405D15146C552A554D007D07EAAB96C9653500150

	2A01515515A54A55115420612021FECA6FC007504F4000016B2FCB027CA6

	F6A00200000000000000000000000000000000000000000000000000002A

	00000000000000000000000035C8B5E11CB59B4000017D16F64039096BB0

	100000000000000000000000000000000000000000000000200000000000

	000000000000040008403AB2B76007169B4400017D16F64039096BB01000

	000000000000000000000000000000000000000000002000000000000000

	00000000040008403AB2B76007169B4400017317F30033E0BA8200900000

	000000000000000480000000040000000042000000014200000020000020

	0000000400308AFC786014F2774000057615B5427B81EF90400200000000

	000004000400010000000000000080080800040800011000841000040000

	000000122CDE7D604EF2EF4000057615B5427B81EF904002000000000000

	040004000100000000000000800808000408000110008410000400000000

	00122CDE7D604EF2EF4000217B17D5083AC1650500800881000000000020

	00002800000000800000008041110080000402120000010080040820007B

	4FE27DE10CD2FF5000007627B740BBE6B690020020000900200000048024

	8000004840040000080000000000021000000022102000400004204C86E2

	35A00774CB4000007627B740BBE6B6900200200009002000000480248000

	004840040000080000000000021000000022102000400004204C86E235A0

	0774CB40000176137F003DF2D89680020000000000240000000000040400

	09000000200200000000000000000000000000000000023BC76E7B6016D1

	F74400017C4BEB403DA0E001201000000000000044000000008000000000

	0080800004800200000000000800000042000000002D496E3BC00F75EF40

	00017C4BEB403DA0E0012010000000000000440000000080000000000080

	800004800200000000000800000042000000002D496E3BC00F75EF400001

	722BBA083F9A9F3A58000019501BE7C9F51A6F7842000000000800000081

	2011284849104010000080040001208000075B5C35E00555DB5000016E0C

	A5413AAA67820880000358C245893D02EA71000254ABD441480000080000

	00000000004001220240000402004000EDD73AE11E7B3F4000016E0CA541

	3AAA67820880000358C245893D02EA71000254ABD4414800000800000000

	0000004001220240000402004000EDD73AE11E7B3F4000017C2CD10031AA

	BD81480000840093548C6B002A7200020000000000000202555129520002

	0000800008000000000000081ACC35A00C55B7540001721637003DD27312

	E010080050002000002000002000E3F27DDF8FFFFC7D374FD3A000000000

	0000000210000002008407FE3DC006BB4F400001721637003DD27312E010

	080050002000002000002000E3F27DDF8FFFFC7D374FD3A0000000000000

	000210000002008407FE3DC006BB4F4000006C636D443DD96DE876000000

	02000000000000028000CCF0595E3FFFFF1DD6AF85D00000000410000010

	004000200202AB76736096B9FF4000017E055F003DFAF2915B0008810042

	900204210A240800BF0FDBF9FFFFFFC7F8F93E9001104010008000000100

	00000000CDDE7DE00CB93F4000017E055F003DFAF2915B00088100429002

	04210A240800BF0FDBF9FFFFFFC7F8F93E90011040100080000001000000

	0000CDDE7DE00CB93F4000016C286D013BBAA8FCBF206DA2475FB3E33E69

	C6B57848D7AFD763FFFFFFF179FCFED00000008000008000000408000000

	36EA77400779CB5000016C93FB483DEAF653D5007184475D33CA284D47AD

	2800FCCF3F9FFFFFFFFC5ED53BA000040000102004008000000400008BB6

	FBE096F9FF4000016C93FB483DEAF653D5007184475D33CA284D47AD2800

	FCCF3F9FFFFFFFFC5ED53BA000040000102004008000000400008BB6FBE0

	96F9FF4000087C11F7023FF96878EB82558C451501231A6548A9A000C36F

	DD1FFFF4FFFF357560C09000080001008048000001000010077EDAA20EE8

	AF4400017EA8F10075BAE52C03004410A61933322405008A00003CCD78FF

	FA001FFF8F6C9E20010420010000000024400800100055DEFB6054FCFB50

	00017EA8F10075BAE52C03004410A61933322405008A00003CCD78FFFA00

	1FFF8F6C9E20010420010000000024400800100055DEFB6054FCFB500001

	6612F7443342B4F90080000000000000000000000100C2ED79FF428443FF

	E1BD808000100004080104420004004000010B7EFC60067CDF4000017E18

	CB003BFAE62C0008000000000000008000000000016AD1FEB80008FFF1D7

	A000000020110000400010280004021066B6D4E096D4F74000017E18CB00

	3BFAE62C0008000000000000008000000000016AD1FEB80008FFF1D7A000

	000020110000400010280004021066B6D4E096D4F74000016A2DF6403E7B

	64D81000009000000000100000400008805DC7FB0848241FFCFDA1E00000

	BC078BE7C27178EE3E0E82100AF4B36417BE6B4100216E1DBF023D2B65B8

	4080000100000400000010000400A1678FF48000203FFCCFA23004104806

	42E040984040222302114D6CEDC004DB774000216E1DBF023D2B65B84080

	000100000400000010000400A1678FF48000203FFCCFA2300410480642E0

	40984040222302114D6CEDC004DB774000053313AB003DD6EAB400080000

	00400022200100080002905E3FF64A10081FFF75A5A84001220406008008

	80400311021080D1570B51E72F4000017E93FC483FE54374000001000000

	000000080000201040777FE50101225FFF3F855900002000462050004840

	0202023089497E00007B3F4800017E93FC483FE543740000010000000000

	00080000201040777FE50101225FFF3F8559000020004620500048400202

	023089497E00007B3F480000771EBB803F93D5A800410004110040000020

	00000004105CFFB8D4400803FF9CA2580020542181E0C018727E1C1E02E4

	22DAABFFFFEA9B4000017F1DBE01366940B8000000400008000001000000

	0082114CFF5A80002005FF8EA24800003C818362427128420E4B021082A2

	BFFFFFB59F4100017F1DBE01366940B80000004000080000010000000082

	114CFF5A80002005FF8EA24800003C818362427128420E4B021082A2BFFF

	FFB59F4100017F57D1140F7B882810040200400000000008104002011973

	FD6A80488081FFE7A43000804004462040C0C002031142110757D7FFFFEF

	5F4000006B1DD84015F7803000100004000001020000400200001157FAA8

	100004447FF326000000220004104004C404001102118C26F5085B7DDF41

	00006B1DD84015F7803000100004000001020000400200001157FAA81000

	04447FF326000000220004104004C404001102118C26F5085B7DDF410011

	7D1FEFFFFFF58020008000000000800000000000000012E7FD8D41442110

	7FF98400000220004620C40080064313021158B3DBEAAB7F9F480041769F

	AFFFFF6B2100020004000420002002400000000412EFEAB2804118053FFC

	96010800780783E750F870783C0C0211A0085D7DFEE63F400041769FAFFF

	FF6B2100020004000420002002400000000412EFEAB2804118053FFC9601

	0800780783E750F870783C0C0211A0085D7DFEE63F400000BF8EF1AFE9EA

	0000200000400000000020000000001030CFF142001042101FFC94000020

	28050183F16810A81402000140069AB7B5607B400001728FD3F6B5DE0400

	0000000000000000000000000000259F5414458000049EFE5A0000008000

	0000000000000040080480082AECFEC9FF400001728FD3F6B5DE04000000

	000000000000000000000000259F5414458000049EFE5A00000080000000

	000000000040080480082AECFEC9FF4000007FC7B2B7ABD4000000020000

	04000210000820080000159FD8A80048414007FE2A000000004008000002

	02010000001004014ABBFE5BDF4900016BCBCDF5F3282010802002002001

	20010000800040406B3FAC5489008100A7FFA90000820000A01000204008

	1000000040408DDDDACF674000016BCBCDF5F32820108020020020012001

	0000800040406B3FAC5489008100A7FFA90000820000A010002040081000

	000040408DDDDACF674000013EC36BE7B9BA000002002010800400000000

	02000200437FC8E9C2A80A9207FFA5002008000004001200002041200000

	0004497CFEA7D74000007D8BCDB2D9580002000000800000000811000000

	0800467F61340284500153FF978880000002000400000000000110100000

	4D756EEFFB4400007D8BCDB2D95800020000008000000008110000000800

	467F61340284500153FF9788800000020004000000000001101000004D75

	6EEFFB4400016BD0BBF7AAF800000012000000080080000000000000D4FF

	D95483512A8009FF9A800000008358400004008521A0000080088EDB7AAF

	FF4000017743FED6FDB011001000040400400000000000082004ACFF689A

	0884801533F7DA000000020950115A5544B81110000002408FEDAFCDB741

	00017743FED6FDB011001000040400400000000000082004ACFF689A0884

	801533F7DA000000020950115A5544B81110000002408FEDAFCDB7410000

	EAB937FBBB60400040000000000000080000000100000BFF55678A500502

	89BFE9400102000186624321536011800202000067D57E9EDD4400117FED

	7BF7F7E20004002020001200400004A2104000101BFEB2DD452048A451FF

	E54100001001A17BD8A0436835110820000477FDFE9BFF4000117FED7BF7

	F7E20004002020001200400004A2104000101BFEB2DD452048A451FFE541

	00001001A17BD8A0436835110820000477FDFE9BFF400000B7ECAFD7CF80

	0000010000408019812020000000040053FF5F575594200008FFE6801008

	0000A1460A2CC35615882008292009EDF73D1F4000017B54A6F57B100000

	080800020118C40200000000200053FD7CAAEB48891250FFF68000004000

	ADE2D314C6DEA4A00000800059FCDE7F5F4900017B54A6F57B1000000808

	00020118C40200000000200053FD7CAAEB48891250FFF68000004000ADE2

	D314C6DEA4A00000800059FCDE7F5F4900017FD731F5DC00040240000100

	15FFF800000800020120A7FFAD7716A1500128F77A600201001000000000

	00000000000000042E7AFCFFDF400008AA931A13B90000080000200001ED

	3C000200000000042FFDD55D899BC48408FFF84000040000800000000000

	100000840000461533E69D400008AA931A13B90000080000200001ED3C00

	0200000000042FFDD55D899BC48408FFF840000400008000000000001000

	00840000461533E69D4000016DCBC0EE74004000008000003EF7FBCA2000

	248001004FFF79F54E68FE53E87FF9501000000200040448200200800200

	02085BCFC2FDCF4800007BD8A285A000000000040010776726C000000000

	4002DFFD6C5557AA7A0FD57FFDA040100008050010008080040080000020

	2FB31C6B5F4000007BD8A285A000000000040010776726C0000000004002

	DFFD6C5557AA7A0FD57FFDA0401000080500100080800400800000202FB3

	1C6B5F4000017E9D717791100124800042026F671BA0004000040408DFF6

	F56B1AFD3D5CFC77FCA1010080201080D5015F7F7B7800000000BFE03C3B

	8F400008BF55F9284010040011000807BFFFEADE040000000020BFED2C58

	4D544F1A157FFE30000000000040040001000090000201007FED7D1E8F48

	0008BF55F9284010040011000807BFFFEADE040000000020BFED2C584D54

	4F1A157FFE30000000000040040001000090000201007FED7D1E8F480000

	FA5DD2823020200000110043EDF577FC000202000100BFEDF54E97FFDE9D

	B51FFE500C02090000201210120B40A00020000015E6FA3F4F4100003EFF

	BE103131800040000003F38CBD3C4108000020013FA614512D9E3697E83F

	BE50000080002000810124020010100000020A79F11B1B4000003EFFBE10

	3131800040000003F38CBD3C4108000020013FA614512D9E3697E83FBE50

	000080002000810124020010100000020A79F11B1B400001F9FDB3805030

	40110000200366E537AA0000101000023FDD55069755374FB90FFF500010

	200481000A0002014050400002280510EA1F1F40000037FB35FAB0198000

	F000001EDE7FF5DD9000000000207BAAD02C703C8B804897FF0800000111

	0000014CC402011000003880875E695F1F40000037FB35FAB0198000F000

	001EDE7FF5DD9000000000207BAAD02C703C8B804897FF08000001110000

	014CC402011000003880875E695F1F400000BF593B6ED0080103F084008A

	7FFF75F70000028102027FD75F270D4A4D92D6CFF7A8080200000004454D

	5041042000023C0014897A1F5B400000B7F33AF0F00004271800440FED40

	3725020008000000FFAD4096B228055089175FA8000848008002027FFF02

	00000000E70003461D8E1B400000B7F33AF0F00004271800440FED403725

	020008000000FFAD4096B228055089175FA8000848008002027FFF020000

	0000E70003461D8E1B400010F5D33990910240000A0000199F00067F0800

	00040004FFEEF87A6E20AA84454BFB9080800002001003E2D7E540110000

	83004105DB2F5F4000013F735844F00000020800007FCC0007AAC0200000

	2006FFFF5DDA99502AC4A935EF50080020050210139FFCE1401404200300

	0945BA8D174900013F735844F00000020800007FCC0007AAC02000002006

	FFFF5DDA99502AC4A935EF50080020050210139FFCE14014042003000945

	BA8D17490000B1B11AD38000001078220173FC2023FC60009000000AFEFE

	B576BC844288047BBDD000010020800C1EF7A13E020000800E040082CBAE

	3F4000017D335C6DC0104100FA001073F80201FDE0080212044AFBFFEEBA

	B7502A456A94F7D40020000500151DBBE7DE400000001C0092616F8EB740

	00017D335C6DC0104100FA001073F80201FDE0080212044AFBFFEEBAB750

	2A456A94F7D40020000500151DBBE7DE400000001C0092616F8EB7400000

	BE173BDF80800003C000003FF1F9E0FF01000000000AFFDFFEEEBF50118A

	8ADBFFC0000012009112F36577D6008000047000005055A96F4000097F13

	19AF9001040300410277F078F0BED0200000000ABFF77F7D4DA98A822BA5

	DFC8110040070014EFBE9EDBC40010106010106A678D3B4800097F1319AF

	9001040300410277F078F0BED0200000000ABFF77F7D4DA98A822BA5DFC8

	110040070014EFBE9EDBC40010106010106A678D3B480000BB5EBAD80200

	2006020001DBC070F07F700000000002F7EFFFD696A4A584ABDDFFCA0004

	00208002DD6FF3A600000000C040820C1A9D5F4000016F0F3BF400000026

	000011E6E074F273780090004090FF7EFD95BED24A422BA5F7C80400020A

	801796BBD8EBC0000040C00010270AAAEB4800016F0F3BF4000000260000

	11E6E074F273780090004090FF7EFD95BED24A422BA5F7C80400020A8017

	96BBD8EBC0000040C00010270AAAEB480000B64679E108000007F81040B5

	A078F01E500400020404FFFFF7E74BD08D895AF7BECA0000000A0113F77E

	FF3764800000FF020108E7B6DB400001FB3337DC209042002081006DC470

	F03BD10000080014F7ABFFF6BCD41FEAABB7FFEA2000200984164DEF6FD9

	20008800008080807B1BFF400000AE1337B08000000080000075C070F03B

	B02000002014DEFFDFD7BF685BAC56FFFFEA0004024A0012FFBF3EFB6100

	0001000004087DAB6F400000AE1337B08000000080000075C070F03BB020

	00002014DEFFDFD7BF685BAC56FFFFEA0004024A0012FFBF3EFB61000001

	000004087DAB6F400004BE675E3800000810020801F7C07F802A50000000

	001DFFEAFFFCD5B497F2AB7FDFEA08000005801753044067D88000040220

	1042F5B7D7400000FCBBFD3000100000000007E5C47F803BBC0000110014

	FBBFBFFFDEAA4BD236FFBDF28100400A8045365D813DD800008000820600

	8EEFFB440000FCBBFD3000100000000007E5C47F803BBC0000110014FBBF

	BFFFDEAA4BD236FFBDF28100400A8045365D813DD8000080008206008EEF

	FB440001364AA86804010000082020BDE070F0AB10800440025DEEF6EBDE

	9D6C88094FFEFFE204110015081BCE4BF01B32810200020087CB7ABFDF40

	0000BE93724900000800800200BFC070F03BD0001000001DBFFFDEEE97B0

	648234DFEDF208000044801F3C3FFC9DBC000000080005A95E7AD7400000

	BE93724900000800800200BFC070F03BD0001000001DBFFFDEEE97B06482

	34DFEDF208000044801F3C3FFC9DBC000000080005A95E7AD7400000FE4D

	58C0000000020080007DC078703BD1000008002BFFFFF5F7DFD1120D57FB

	FFF000000012800F5E68C317EA801000000807F0EE9E2B400020B695FAC8

	000010080000003FE070701FD0010000882DFFEB7FAF795849028F7F9EF3

	0000400500155E4EC21EDC000000204009A81DDC3F400020B695FAC80000

	10080000003FE070701FD0010000882DFFEB7FAF795849028F7F9EF30000

	400500155E4EC21EDC000000204009A81DDC3F400001BF5B51F000400100

	090821F7A078727F78000040002BFDFFEEFD97557FFF4BFFF7B004010012

	80155A35875EA6810008000006EAFFBDFF440000BB16F188110000000001

	005FE470F07F7108000200ABF7FFBDD7FFAD00081FEEBFF10004000480B7

	BE56C49B770002008002046C74FA2B400000BB16F188110000000001005F

	E470F07F7108000200ABF7FFBDD7FFAD00081FEEBFF10004000480B7BE56

	C49B770002008002046C74FA2B400000BFBAB3D10000400000000077F070

	F0BE60002010002BFFBFFFEF7ED4810296FFF5F108100026821BB657CD9F

	D6000000090803366EEFDB400000B7D6D7C8000004208008007F39FBC07E

	80000040022B7EF6EDB5D7E8B4525FFBDFB1000000950016FD53769F7500

	20000020400E9BBF77400000B7D6D7C8000004208008007F39FBC07E8000

	0040022B7EF6EDB5D7E8B4525FFBDFB1000000950016FD53769F75002000

	0020400E9BBF77400000BFD34B98200800080121087AE9FF03E781000400

	002BEFFFBBEDBDB44D0915EF7FF1000000048017BE6FB31B569000022000

	054D1FDFFF400000BECB47D0010000000000006FBC0003BD60000000002B

	FFF7FFD5EFD4B2A45FFFF6F1010010130876EC1DD91FB70102080000018B

	D7FBCF400000BECB47D0010000000000006FBC0003BD60000000002BFFF7

	FFD5EFD4B2A45FFFF6F1010010130876EC1DD91FB70102080000018BD7FB

	CF400008FFDECED0000000001000007FBE00051FE0008008002AFDEEB4F6

	DEF949555FDDBFF110000004801DBE5BEC1D5F0000200000008BAEB53F40

	0000B746B990000001080000021FE7000EDF00001020402BB7BFEFDB7BAC

	5085BEFFFFF10000000B0097FA6F775F740000000810006AFEEAD3400000

	B746B990000001080000021FE7000EDF00001020402BB7BFEFDB7BAC5085

	BEFFFFF10000000B0097FA6F775F740000000810006AFEEAD3400000BFF6

	FCE8084020000042100F6F8014FF01000080012BFFFABBEADFFD2A0A7FFD

	DDF10000420A801FBCEEF51F7400080040009063EBB7FF400000BF16E190

	00010000220000057EFFFB5300210000002BFFB7EFFB56F94589FD6FB7F1

	0082002A8077B7999DDBD62020000084010ABE7817400000BF16E1900001

	0000220000057EFFFB5300210000002BFFB7EFFB56F94589FD6FB7F10082

	002A8077B7999DDBD62020000084010ABE7817400000B5D2DAD100000100

	8000011FDE7FE9CD880000002022DEEB7BECDBFFEA0BF7FEFF710008000A

	020E1F62A57E44010080000000077F726F400000FF6DF0D4010004240000

	20556E7BB3EE208010010029FFFBFFFB5FEB6A97BDFFEFF1110000058815

	DEAED7B76880000900008041B6E5DB440000FF6DF0D40100042400002055

	6E7BB3EE208010010029FFFBFFFB5FEB6A97BDFFEFF1110000058815DEAE

	D7B76880000900008041B6E5DB440000B598F2D00000000000480003E77B

	3FF400004000012BFFDFFAF5D6FDFD2BEB77BDF10000000A001EFF926CFD

	EC000000020808086ED496400000F79AD1D00020000001000203E5FBAB3C

	000100200429FDFBEFFEEFBFB7DEFFFD7FB100001081905DEB03B1DF7E00

	1000402001006BA109400000F79AD1D00020000001000203E5FBAB3C0001

	00200429FDFBEFFEEFBFB7DEFFFD7FB100001081905DEB03B1DF7E001000

	402001006BA109400000B525F1900200408020000003FF3FD4DC00000001

	002DFFDEFFFD19EFFDEFD9DFEDF202200002810B2F7FF232501040090000

	0008344047410000B7DAF3D010000401000000027B39D5A000080000000D

	DFFBF5FADEF9FFDFFF7BBF600000020280153F48223B5011000001008080

	FE7C8F400000B7DAF3D010000401000000027B39D5A000080000000DDFFB

	F5FADEF9FFDFFF7BBF600000020280153F48223B5011000001008080FE7C

	8F400000BFEDA1D000020008000000003FBD96C140200004022DFFEFFFEF

	4DDFBF5EDDFFDBF200008009005DD77AACF75804000800000A0A73FFFF40

	0000BDF6C39800000000020442103FFCFFC004000200001CFEEEEFBFB7F5

	F59BF7EDFEE2080000250207D580B0C3F8000020000200007DBDFF400000

	BDF6C39800000000020442103FFCFFC004000200001CFEEEEFBFB7F5F59B

	F7EDFEE2080000250207D580B0C3F8000020000200007DBDFF400000BBDB

	55D00040100108100000017FCC00000000000015EFFBFDFF4B7EDE9FFEFF

	BFEA0000000080163EB4AFDE2030000004200004675F7D400000BFC707D0

	0000012000000000013FC800000020000214BF57DFFFDDBBFA1FDBDEEFE2

	2008000200137F7E7B3FC04000008000102A77B797400000BFC707D00000

	012000000000013FC800000020000214BF57DFFFDDBBFA1FDBDEEFE22008

	000200137F7E7B3FC04000008000102A77B797400000B48613D000000000

	008000000119C000000000202814FDFFB7DF9FEFFC1FFF7BFFCA00000001

	0007B77B2E76E050020423C24000EEFAAD400000BD1D4B91000080084000

	088000100005000000808004EFE6FFFFCABAD05FB5FFFDCA000080800440

	DF4FF3FF00000800020000805D2F57400000BD1D4B910000800840000880

	00100005000000808004EFE6FFFFCABAD05FB5FFFDCA000080800440DF4F

	F3FF00000800020000805D2F57400000B7991FD021080200101000000200

	00000020420800047DFFFFFFEFFFA20FFFF7B7CA000008011000DDB157B5

	41312001260000057ED5BF400000BF3FFFD0000000044001000088002040

	088000000002F7AD597FFAB6804EFBBFFFC800800004801137EBFFF74090

	0048040A94007EBEDD440000BF3FFFD00000000440010000880020400880

	00000002F7AD597FFAB6804EFBBFFFC800800004801137EBFFF740900048

	040A94007EBEDD440000BE9AB79408201000020020200000020020010000

	004AFFDFEFEFEDED401BDEFEFFC01000010020403BEC45C640C00000222A

	A880FF7B8F400000BAD1DED000810110080400000000000200000000000A

	EEF7DFFF6350085E7BF7BFD00000400000205E6F773D41300002038A4804

	2FDFFF440000BAD1DED000810110080400000000000200000000000AEEF7

	DFFF6350085E7BF7BFD00000400000205E6F773D41300002038A48042FDF

	FF440000BECF7DD000000001200000000008000000000002010AFFFCFFDB

	FFEC801F6EDFEF90400100002142573BD736400420000000000077DDD740

	0004B9FB7B9000002004002002044000800000000008004AFFEFB5FFE528

	097F7DFDFDB080040008060157EAA2EA2A40040020000021DABFBB400004

	B9FB7B9000002004002002044000800000000008004AFFEFB5FFE528097F

	7DFDFDB080040008060157EAA2EA2A40040020000021DABFBB400000BBDF

	F5D00008000010800000000000000080008000A4FEEDFFFDEDA020B76BBF

	B7A1001000200000007FFF000000004200000106647EEF410000BDF7EB90

	0900022002020810040000080004040000CCF7B7BFDFEAA142BFFEFFFFB9

	008000800800004DF30000000008040804073EEDF7400000BDF7EB900900

	022002020810040000080004040000CCF7B7BFDFEAA142BFFEFFFFB90080

	00800800004DF30000000008040804073EEDF7400000BBDF55F100110007

	C018081C110927614160100000B07FFBFCFFFAA800FFDDF7BF8A82000001

	001000088002000080404000000A79BFFB400000BDFDFA0E20002002E03C

	3E14070387B040B0100002687FEEBFEFEAA80177A7DEEB29800000000840

	8000800000200000002008081FFECF400000BDFDFA0E20002002E03C3E14

	070387B040B0100002687FEEBFEFEAA80177A7DEEB298000000008408000

	800000200000002008081FFECF400000BBF7E10080400004304232000C84

	C4013190900000AE3FEFEFFFE1100ADFF8FFFF4B20000000000000000008

	00800000008200AE4BAFAB400000BEBFD548410002043062220488844401

	31801000011A3FDBFFF6F0A82497A9FFFF19A00040082000002800002400

	12220000010C0AF76F400000BEBFD5484100020430622204888444013180

	1000011A3FDBFFF6F0A82497A9FFFF19A000400820000028000024001222

	0000010C0AF76F400000BD7A23D130020006220632040004440031101202

	01CE3EEFDFDBF40202D7ACBFFE5BE0220020020000000000000000000008

	088774BBDB400000BF5F5B1C00008082700C2A040086C5C020E01F08014A

	3FFFB97EBA24212FDACBFE71A200000000000000804000008000220001AD

	68ED5F000000BF5F5B1C00008082700C2A040086C5C020E01F08014A3FFF

	B97EBA24212FDACBFE71A200000000000000804000008000220001AD68ED

	5F000008BEB6B3C714121007A01C3A04070746206190100008C8BFBFFFFE

	FC13480DED7CBAB3A4000881002008000202000000040010086FFA153F40

	0000BB8AFD3FE1000004300223040C0860303182102021ECCEEDCF77DF54

	4243F4EF7CA190002208208100020000024408400090373A1E4797440000

	BB8AFD3FE1000004300223040C0860303182102021ECCEEDCF77DF544243

	F4EF7CA190002208208100020000024408400090373A1E4797440000B6D6

	6803F108012430026100080420303108100005E95FF7BDFF7E25210AF6BD

	ADABA800002004000000000000000002882846300662BB400000BBCBB3D8

	3C902006B16622042804406331B0500001724DFFF7BFAF138015F7F7795A

	AC0420008001000000401000020801004E67F03B6F400000BBCBB3D83C90

	2006B16622042804406331B0500001724DFFF7BFAF138015F7F7795AAC04

	20008001000000401000020801004E67F03B6F400000AF5FC5543E000007

	60FA3E1F9786C7C1B1E0100005722FCF7FDFFF19088EFD5FA84360008200

	000000100000000010000050DE8FFCF99D000000BF8F89BFBE6120810008

	08100A038500000000010AD7A7DBBF7F7FC982417F75F2F3880000221000

	040020000080000022103E1C8C7CEB400000BF8F89BFBE61208100080810

	0A038500000000010AD7A7DBBF7F7FC982417F75F2F38800002210000400

	20000080000022103E1C8C7CEB400000BF5A3AAD17A00410000000000000

	0000000000200252B37FFDF7DBD1494B7BAF66D320800080002010010204

	0010421200A03E677A7EBF400000BD8223F48F9080000000000000000000

	000000000074D3EFD7DFEF89CA08BB7EE5F3320020000000004000000401

	0080890074CFED973B000000BD8223F48F90800000000000000000000000

	00000074D3EFD7DFEF89CA08BB7EE5F33200200000000040000004010080

	890074CFED973B000000AE3CF90545D08000000000010010000000004000

	013A43FA7EBF7FA16B52B9DBE5B6A80800040404000000201000040000C0

	F9D8159D3B400000B73C9607B7680008000000000000000010010401088D

	C9EFADDF9FCD54942DEF49F54020BFFD800000040000000000122420E8E8

	1BC397400000B73C9607B7680008000000000000000010010401088DC9EF

	ADDF9FCD54942DEF49F54020BFFD800000040000000000122420E8E81BC3

	97400000BA79A80EB3601500208300805000401000800044017E74BFFFF7

	FFD4C094ADBF9373D2003DCD8000800000000100080002C2F3301D679308

	0000AE69D807A9E00000800C0807F800008902000000409554FFF7BDFFEA

	554A7FFB17FD55922968240000004004002020A08902B5E01FA757400000

	AE69D807A9E00000800C0807F800008902000000409554FFF7BDFFEA554A

	7FFB17FD55922968240000004004002020A08902B5E01FA757400000BAF2

	F80DF179001000103009000C003E083C20006F2FB36EDDEFDBEBB6115CDF

	A6AB5E000000008001C000004C0000060285E6E01AB3DF000000BCF3780E

	B9F0010D00320002001C003B10360009AAA3FB7FFFFBFFF5534277F7AEF7

	72800336804012500020480600102B05A7501EF2DF400000BCF3780EB9F0

	010D00320002001C003B10360009AAA3FB7FFFFBFFF5534277F7AEF77280

	0336804012500020480600102B05A7501EF2DF400000BCC2B44D55B8103F

	8204001910181212042004204FF87CB76DDFD7FB54485DFF0FB3E88002C6

	120024100020480400000F45CDE89DCB9B000000BCF7BC076CE80031C045

	04113113C8656E68800125D43C9FF77F7EF4905076BE1EE1B10443A40000

	04100028FE0000002FC546D01EBB5F480000BCF7BC076CE80031C0450411

	3113C8656E68800125D43C9FF77F7EF4905076BE1EE1B10443A400000410

	0028FE0000002FC546D01EBB5F480000B4C5680FF4D90020C0DD140257EE

	50C9C1D9B08457F4EE8FFFFEFFDBAD41AFFA3D0FE7920324200004165678

	69E1B10112418DD81DE9D7000004BCC5688D2CB82202C073D8027B30F103

	4272E011BA7E774F7FF7FDF54C40DDFCB15D5FA800400004065AD4B0594A

	D2004553CF601C599F480004BCC5688D2CB82202C073D8027B30F1034272

	E011BA7E774F7FF7FDF54C40DDFCB15D5FA800400004065AD4B0594AD200

	4553CF601C599F480000BDADF427F6E80029C00104100500000800000005

	E9D23F2FDDBFB7F9A288AD79BF2ED0DD10C004004393772C49F49DC02948

	49A81AE98F000000BD8EEC0DBE78081F00030000120200000000022226BD

	1D87FFFEFFFCB081AB726DD9FD0481E1100440000000000000054BCBCFE8

	9FDD6F400000BD8EEC0DBE78081F00030000120200000000022226BD1D87

	FFFEFFFCB081AB726DD9FD0481E1100440000000000000054BCBCFE89FDD

	6F400000BD6BD8273668203C10010100960000000000801D5AE5CFD3D7DF

	EFFF835696E67F72522B00A0004000008000040000002F8A5DA81EF5CB08

	0000B9CCEC8FBA7080B0400400000800000831000021A42B7369FDF7FBFD

	6D165DC9A9D571A8404406810000020100002000980A8FB81A596F400000

	B9CCEC8FBA7080B0400400000800000831000021A42B7369FDF7FBFD6D16

	5DC9A9D571A8404406810000020100002000980A8FB81A596F4000083D4F

	EC0EEE5810240080082038040000480820008186FDE8FF7FCFFDAC8A5589

	EFAABCA90000296001020000201000142402DDA05EFDCF400000BDADEC0D

	B6F082380000000000000101040080057F7A6DACEFF77800030557CDF6DF

	BFF4109083E00010002000810040900A4F981CD54D000000BDADEC0DB6F0

	82380000000000000101040080057F7A6DACEFF77800030557CDF6DFBFF4

	109083E00010002000810040900A4F981CD54D000020BD4F6847FA7A003F

	C01040020000001070200225FFBEBEE8FFBFCE837C7255E6FFF6EB5BEFEF

	7F5020402003100000022AC2CBE81FD9EF400000B5C5EC0DAED008011248

	0100082062011C040000000000030DF0A2A970536C1100495495595AAB51

	2200038204802200DFC94EB11EEB5B000000B5C5EC0DAED0080112480100

	082062011C040000000000030DF0A2A970536C1100495495595AAB512200

	038204802200DFC94EB11EEB5B000000AC86700E6CB800A4001004028401

	42005F7BFDBFB7F6F7F367AB4E000494AF99FFBFBBBF77FFBC700A6F91D2

	B4F0000900024BD819B9DD48000034D7B806D5D2400020AE61532A3E19C1

	200000000000000794843FFFFF8C117C000000009120A2A03150A2455300

	000850850CE05FDB5B40000034D7B806D5D2400020AE61532A3E19C12000

	00000000000794843FFFFF8C117C000000009120A2A03150A24553000008

	50850CE05FDB5B400000AAD2F04DD9A80000005256A0C4124511BFFFFFFF

	FFFFFFFF2D07FFFFFFFC2CFFFFFFFFFFFFFFFF2400010000002022220215

	67E81A731F400010BED37806E9D84404888000000000000E5FFFFFFFFFFF

	FFFF9C7FFDFFFFFFAC7FFFFFFFFFFFFFFED40200000000208004A0056660

	1BB3DF400010BED37806E9D84404888000000000000E5FFFFFFFFFFFFFFF

	9C7FFDFFFFFFAC7FFFFFFFFFFFFFFED40200000000208004A00566601BB3

	DF400000BBABD805B920108800100000000000053FFFFFFFFFFFFFFEBFFF

	D54800FFFFF9FFFFFFFFFFFFFD25844250840002846B10A237B10EE60300

	0000AF494100A351400000000080000000450FFFFFFFFFFFFFFF55DFADAB

	FD0FFDE52DFFFFFFFFFFFD46302B56337B7428B4EE2A55C023A75F400000

	AF494100A351400000000080000000450FFFFFFFFFFFFFFF55DFADABFD0F

	FDE52DFFFFFFFFFFFD46302B56337B7428B4EE2A55C023A75F4000003F4C

	FFFFD6AB39B5BB9ABD735335A695792A001001000000F80006A040C001A0

	038903400006890112AD50A92526955BA4B4B37FFEE5BF480000B334AFFF

	164A952DA92C4654122AD2A516A41C1801C200008C0307A0E07007F007FE

	03B00403AEA4A55D6AA41864B4F7CAB488DFFE4EAB400000B334AFFF164A

	952DA92C4654122AD2A516A41C1801C200008C0307A0E07007F007FE03B0

	0403AEA4A55D6AA41864B4F7CAB488DFFE4EAB400000B7A2736B8D365A0C

	22D65DEB5AA537545B601E0600F700E0EA438180E01807F80FE801FC0603

	D276DF6BF77BEFA76AACAF4ADDE7FB9937400008BE971AE9CD5BFDFBFBBB

	6EB3DDBEFB5B2FA01E07007700E0F4078980E0180F681FFA10DC0411ED65

	000000000000000040115457461C4F000008BE971AE9CD5BFDFBFBBB6EB3

	DDBEFB5B2FA01E07007700E0F4078980E0180F681FFA10DC0411ED650000

	00000000000040115457461C4F0000002FD1956F18200000000000000000

	0008EEC01E074037008FF4038080E0100D901E8580F40C07CA98FFFFFFFF

	FFFFFFFFFFFF0E2DAA72DD410000BE52C7AE317FFFFFFFFFFFFFFFFFFFAF

	55A21E076007208FDA038080E0380F181B598074004FE9FE3A6FB0D72BFF

	BBFFDFFFB18EACC4F7400000BE52C7AE317FFFFFFFFFFFFFFFFFFFAF55A2

	1E076007208FDA038080E0380F181B598074004FE9FE3A6FB0D72BFFBBFF

	DFFFB18EACC4F7400000BA68E358627FF7FBDBDFFFFFED7DDF5D6BA01C07

	620600CE75238080F0188E981F9B84781407ABA75FFFE55FBDFBEF7F4BF6

	CB8BB8E9AF400000AEE638018AF3FAAFFAFEF3AF6AEFF6B7E7C05E077007

	00E8D4839384E0180E180E1B803C0C07AAFB3F7773BB5577BDFF4FF7A460

	0313E7400000AEE638018AF3FAAFFAFEF3AF6AEFF6B7E7C05E07700700E8

	D4839384E0180E180E1B803C0C07AAFB3F7773BB5577BDFF4FF7A4600313

	E7400000BDF29C0785BB753EBBDBDF7B6D5D563EF5E01E46380700E0F603

	81C0E0301C181E1BC0384483ADA55E3BF4F6FFACEB7EB6FFF5784EA7DB40

	000025BD27FE1BF5FCDFD9F77BEFCAFB39776F401C1E2C0704C0E80303C0

	C0600810081180300403B3EB231BE75F5577DEBB676EA90F7A8FF7400000

	25BD27FE1BF5FCDFD9F77BEFCAFB39776F401C1E2C0704C0E80303C0C060

	0810081180300403B3EB231BE75F5577DEBB676EA90F7A8FF7400000BFFC

	81F0177BDDB7FEEFD7B5B57E3AB5ABEC1C1C0A061000F00217F041C00000

	0000010103045DF75A37B6BDFBF77EFCABDEE8A6B41DEF000000B3573202

	8DB5F555ADBDFBE75E76D03157B7EBFFFDFFFFFFDFFFFFDFFFFFFFFFFFFF

	FFFFFFFFD2D54D9DEF7D6D77D79D7DEB9E004877B7440000B35732028DB5

	F555ADBDFBE75E76D03157B7EBFFFDFFFFFFDFFFFFDFFFFFFFFFFFFFFFFF

	FFFFD2D54D9DEF7D6D77D79D7DEB9E004877B7440000BDDD18009AEEF9AF

	F5FEF7F7B57B4D3D6FCFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFF

	FD76A335C74F7AF7DEEB66AFEF00A0DECB400000BB7BE3FC6EDF675B6F79

	DDDE9FAE24571EEBFFFFFF7FFFFFF7FFFFB7FF5FFFFFFFFFFFFFFFFFE5D7

	8E7EB7B97FFBFDB6BDFEFFF057FEFF000000BB7BE3FC6EDF675B6F79DDDE

	9FAE24571EEBFFFFFF7FFFFFF7FFFFB7FF5FFFFFFFFFFFFFFFFFE5D78E7E

	B7B97FFBFDB6BDFEFFF057FEFF0000009DEFF803BFBDBBBDFB7F7F77FFFF

	FFFEFBAAFFE9FBBFFFFFD9FFFEDB7DDFFFFFDDF7FFBDA9552502AA454292

	45102050804000048800004000083FFFFF5FFFFFFFFFFFFFFDFEF6AAD2AB

	2CA504142440000000000000000000000000000000000000000000000000

	0000020000000000804800083FFFFF5FFFFFFFFFFFFFFDFEF6AAD2AB2CA5

	041424400000000000000000000000000000000000000000000000000000

	0200000000008048000080000000000000000000000000211224134AEAB7

	ABBEFFFFFFFFFFFFFFFBFFFFFFFFED77FFBFFFFFFFFFFFFFFFFFFFFFFFFF

	FFFFF08400000000A48D53EDB6EFFFFFFFFFFFF7FFDEFDB56D4AAA54A080

	000000000000000000000000000000000000000000000000000000000000

	020000900000A48D53EDB6EFFFFFFFFFFFF7FFDEFDB56D4AAA54A0800000

	000000000000000000000000000000000000000000000000000000000200

	009000000000000000000000000000000000000000000000001000000000

	000000000000000000000000000000000000000000000800040000800000

	000000000000000000000000000000000000000000000000100000000000

	000000000000000000000000000000100000004400948000100200400000

	000000000000000000000000000000000000000000001000000000000000

	000000000000000000000000001000000044009480001002004000000100

	800000000000000000000000000000000000040040880000000000000000

	000000000010100000000000000000004000000040000200000004000000

	000000008000000000000000000000000008000084200000000000000002

	088401008000800004000002200004000020000040000000040000000000

	000080000000000000000000000000080000842000000000000000020884

	010080008000040000022000040000200000400000000000000004400000

	000000000000000002080008000000000000000000000000000000000002

	000004010000000000000000000100010000000010000000000000000001

	444000020000000000002000002200000000000000000000000020200000

	000400040010001080000000000400100000100000000000000000014440

	000200000000000020000022000000000000000000000000202000000004

	000400100010800000000004001000000008910800000000000000000000

	000010002000002000800820880000000000020010080200000000000010

	0080000000000400001000000024810000000000800A0084000042000001

	008000800100420000020000000011000810802000480002010000400400

	040020001000000004000024810000000000800A00840000420000010080

	008001004200000200000000110008108020004800020100004004000400

	200010000000040000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	000000000000000000000000000000000000000000000000000000000000

	00>

    } imagemask

grestore

0.500008 0.500008 0.500008 SetBgColor

421 154 121 2 Box Fill



540 86 2 70 Box Fill



0.750011 0.750011 0.750011 SetBgColor

newpath 421 156 moveto

421 86 lineto

542 86 lineto

540 88 lineto

423 88 lineto

423 154 lineto

421 156 lineto

421 156  lineto closepath Fill

0 setlinejoin

0 setlinecap

0 0 0 SetFgColor

3 setlinewidth

[ ] 0 setdash

448 102 42 Li

1 setlinewidth

[ ] 0 setdash



/DrawSymbolProc {

  gsave

    0.996109 0.644541 0 SetBgColor

    Fill

    0 0 0 SetFgColor

    stroke

  grestore

} def



448 102 21 Ci

58 27 0 502 104 BeginText

14 /Helvetica SetFont

0 0 0 SetFgColor

(sin\(x\)) 58 0 21 DrawAdjText

EndText

0 setlinejoin

0 setlinecap

0.542977 0.542977 0 SetFgColor

3 setlinewidth

[ ] 0 setdash

448 135 42 Li

1 setlinewidth

[ ] 0 setdash



/DrawSymbolProc {

  gsave

    0.996109 0.996109 0 SetBgColor

    Fill

    0.542977 0.542977 0 SetFgColor

    stroke

  grestore

} def



448 135 21 Ci

64 27 0 505 137 BeginText

14 /Helvetica SetFont

0 0 0 SetFgColor

(cos\(x\)) 64 0 21 DrawAdjText

EndText

24 16 90 537 388 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(360) 24 0 12 DrawAdjText

EndText

32 16 90 79 384 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(-360) 32 0 12 DrawAdjText

EndText

8 16 0 85 90 BeginText

8 /CourierNewBold-Bold SetFont

0.566415 0.171878 0.929702 SetFgColor

(1) 8 0 12 DrawAdjText

EndText

16 16 0 89 402 BeginText

8 /CourierNewBold-Bold SetFont

0.566415 0.171878 0.929702 SetFgColor

(-1) 16 0 12 DrawAdjText

EndText

8 16 90 537 364 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(1) 8 0 12 DrawAdjText

EndText

8 16 90 79 356 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0) 8 0 12 DrawAdjText

EndText

8 16 0 101 90 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(1) 8 0 12 DrawAdjText

EndText

8 16 0 109 402 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0) 8 0 12 DrawAdjText

EndText



% Element "line2"



0 setlinejoin

0 setlinecap

0.542977 0.542977 0 SetFgColor

1 setlinewidth

[ ] 0 setdash

/DashesProc {} def

 newpath 79 90 moveto

 82 90 lineto

 85 92 lineto

 88 95 lineto

 91 99 lineto

 94 104 lineto

 98 110 lineto

 101 118 lineto

 104 126 lineto

 107 135 lineto

 110 145 lineto

 114 156 lineto

 117 168 lineto

 120 180 lineto

 123 192 lineto

 126 205 lineto

 130 219 lineto

 133 232 lineto

 136 246 lineto

 139 260 lineto

 142 273 lineto

 145 287 lineto

 149 300 lineto

 152 312 lineto

 155 324 lineto

 158 336 lineto

 161 347 lineto

 165 357 lineto

 168 366 lineto

 171 374 lineto

 174 382 lineto

 177 388 lineto

 181 393 lineto

 184 397 lineto

 187 400 lineto

 190 402 lineto

 193 403 lineto

 196 402 lineto

 200 400 lineto

 203 397 lineto

 206 393 lineto

 209 388 lineto

 212 382 lineto

 216 374 lineto

 219 366 lineto

 222 357 lineto

 225 347 lineto

 228 336 lineto

 232 324 lineto

 235 312 lineto

 238 300 lineto

 241 287 lineto

 244 273 lineto

 247 260 lineto

 251 246 lineto

 254 232 lineto

 257 219 lineto

 260 205 lineto

 263 192 lineto

 267 180 lineto

 270 168 lineto

 273 156 lineto

 276 145 lineto

 279 135 lineto

 283 126 lineto

 286 118 lineto

 289 110 lineto

 292 104 lineto

 295 99 lineto

 298 95 lineto

 302 92 lineto

 305 90 lineto

 308 90 lineto

 311 90 lineto

 314 92 lineto

 318 95 lineto

 321 99 lineto

 324 104 lineto

 327 110 lineto

 330 118 lineto

 334 126 lineto

 337 135 lineto

 340 145 lineto

 343 156 lineto

 346 168 lineto

 349 180 lineto

 353 192 lineto

 356 205 lineto

 359 219 lineto

 362 232 lineto

 365 246 lineto

 369 260 lineto

 372 273 lineto

 375 287 lineto

 378 300 lineto

 381 312 lineto

 385 324 lineto

 388 336 lineto

 391 347 lineto

 394 357 lineto

 397 366 lineto

 400 374 lineto

 404 382 lineto

 407 388 lineto

 410 393 lineto

 413 397 lineto

 416 400 lineto

 420 402 lineto

 423 403 lineto

 426 402 lineto

 429 400 lineto

 432 397 lineto

 436 393 lineto

 439 388 lineto

 442 382 lineto

 445 374 lineto

 448 366 lineto

 451 357 lineto

 455 347 lineto

 458 336 lineto

 461 324 lineto

 464 312 lineto

 467 300 lineto

 471 287 lineto

 474 273 lineto

 477 260 lineto

 480 246 lineto

 483 232 lineto

 487 219 lineto

 490 205 lineto

 493 192 lineto

 496 180 lineto

 499 168 lineto

 502 156 lineto

 506 145 lineto

 509 135 lineto

 512 126 lineto

 515 118 lineto

 518 110 lineto

 522 104 lineto

 525 99 lineto

 528 95 lineto

 531 92 lineto

 534 90 lineto

 538 90 lineto

DashesProc stroke

1 setlinewidth

[ ] 0 setdash



/DrawSymbolProc {

  gsave

    0.996109 0.996109 0 SetBgColor

    Fill

    0.542977 0.542977 0 SetFgColor

    stroke

  grestore

} def



79 90 9 Ci

82 90 9 Ci

85 92 9 Ci

88 95 9 Ci

91 99 9 Ci

94 104 9 Ci

98 110 9 Ci

101 118 9 Ci

104 126 9 Ci

107 135 9 Ci

110 145 9 Ci

114 156 9 Ci

117 168 9 Ci

120 180 9 Ci

123 192 9 Ci

126 205 9 Ci

130 219 9 Ci

133 232 9 Ci

136 246 9 Ci

139 260 9 Ci

142 273 9 Ci

145 287 9 Ci

149 300 9 Ci

152 312 9 Ci

155 324 9 Ci

158 336 9 Ci

161 347 9 Ci

165 357 9 Ci

168 366 9 Ci

171 374 9 Ci

174 382 9 Ci

177 388 9 Ci

181 393 9 Ci

184 397 9 Ci

187 400 9 Ci

190 402 9 Ci

193 403 9 Ci

196 402 9 Ci

200 400 9 Ci

203 397 9 Ci

206 393 9 Ci

209 388 9 Ci

212 382 9 Ci

216 374 9 Ci

219 366 9 Ci

222 357 9 Ci

225 347 9 Ci

228 336 9 Ci

232 324 9 Ci

235 312 9 Ci

238 300 9 Ci

241 287 9 Ci

244 273 9 Ci

247 260 9 Ci

251 246 9 Ci

254 232 9 Ci

257 219 9 Ci

260 205 9 Ci

263 192 9 Ci

267 180 9 Ci

270 168 9 Ci

273 156 9 Ci

276 145 9 Ci

279 135 9 Ci

283 126 9 Ci

286 118 9 Ci

289 110 9 Ci

292 104 9 Ci

295 99 9 Ci

298 95 9 Ci

302 92 9 Ci

305 90 9 Ci

308 90 9 Ci

311 90 9 Ci

314 92 9 Ci

318 95 9 Ci

321 99 9 Ci

324 104 9 Ci

327 110 9 Ci

330 118 9 Ci

334 126 9 Ci

337 135 9 Ci

340 145 9 Ci

343 156 9 Ci

346 168 9 Ci

349 180 9 Ci

353 192 9 Ci

356 205 9 Ci

359 219 9 Ci

362 232 9 Ci

365 246 9 Ci

369 260 9 Ci

372 273 9 Ci

375 287 9 Ci

378 300 9 Ci

381 312 9 Ci

385 324 9 Ci

388 336 9 Ci

391 347 9 Ci

394 357 9 Ci

397 366 9 Ci

400 374 9 Ci

404 382 9 Ci

407 388 9 Ci

410 393 9 Ci

413 397 9 Ci

416 400 9 Ci

420 402 9 Ci

423 403 9 Ci

426 402 9 Ci

429 400 9 Ci

432 397 9 Ci

436 393 9 Ci

439 388 9 Ci

442 382 9 Ci

445 374 9 Ci

448 366 9 Ci

451 357 9 Ci

455 347 9 Ci

458 336 9 Ci

461 324 9 Ci

464 312 9 Ci

467 300 9 Ci

471 287 9 Ci

474 273 9 Ci

477 260 9 Ci

480 246 9 Ci

483 232 9 Ci

487 219 9 Ci

490 205 9 Ci

493 192 9 Ci

496 180 9 Ci

499 168 9 Ci

502 156 9 Ci

506 145 9 Ci

509 135 9 Ci

512 126 9 Ci

515 118 9 Ci

518 110 9 Ci

522 104 9 Ci

525 99 9 Ci

528 95 9 Ci

531 92 9 Ci

534 90 9 Ci

538 90 9 Ci



% Element "line1"



0 setlinejoin

0 setlinecap

0 0 0 SetFgColor

1 setlinewidth

[ ] 0 setdash

/DashesProc {} def

 newpath 79 246 moveto

 82 232 lineto

 85 219 lineto

 88 205 lineto

 91 192 lineto

 94 180 lineto

 98 168 lineto

 101 156 lineto

 104 145 lineto

 107 135 lineto

 110 126 lineto

 114 118 lineto

 117 110 lineto

 120 104 lineto

 123 99 lineto

 126 95 lineto

 130 92 lineto

 133 90 lineto

 136 90 lineto

 139 90 lineto

 142 92 lineto

 145 95 lineto

 149 99 lineto

 152 104 lineto

 155 110 lineto

 158 118 lineto

 161 126 lineto

 165 135 lineto

 168 145 lineto

 171 156 lineto

 174 168 lineto

 177 180 lineto

 181 192 lineto

 184 205 lineto

 187 219 lineto

 190 232 lineto

 193 246 lineto

 196 260 lineto

 200 273 lineto

 203 287 lineto

 206 300 lineto

 209 312 lineto

 212 324 lineto

 216 336 lineto

 219 347 lineto

 222 357 lineto

 225 366 lineto

 228 374 lineto

 232 382 lineto

 235 388 lineto

 238 393 lineto

 241 397 lineto

 244 400 lineto

 247 402 lineto

 251 403 lineto

 254 402 lineto

 257 400 lineto

 260 397 lineto

 263 393 lineto

 267 388 lineto

 270 382 lineto

 273 374 lineto

 276 366 lineto

 279 357 lineto

 283 347 lineto

 286 336 lineto

 289 324 lineto

 292 312 lineto

 295 300 lineto

 298 287 lineto

 302 273 lineto

 305 260 lineto

 308 246 lineto

 311 232 lineto

 314 219 lineto

 318 205 lineto

 321 192 lineto

 324 180 lineto

 327 168 lineto

 330 156 lineto

 334 145 lineto

 337 135 lineto

 340 126 lineto

 343 118 lineto

 346 110 lineto

 349 104 lineto

 353 99 lineto

 356 95 lineto

 359 92 lineto

 362 90 lineto

 365 90 lineto

 369 90 lineto

 372 92 lineto

 375 95 lineto

 378 99 lineto

 381 104 lineto

 385 110 lineto

 388 118 lineto

 391 126 lineto

 394 135 lineto

 397 145 lineto

 400 156 lineto

 404 168 lineto

 407 180 lineto

 410 192 lineto

 413 205 lineto

 416 219 lineto

 420 232 lineto

 423 246 lineto

 426 260 lineto

 429 273 lineto

 432 287 lineto

 436 300 lineto

 439 312 lineto

 442 324 lineto

 445 336 lineto

 448 347 lineto

 451 357 lineto

 455 366 lineto

 458 374 lineto

 461 382 lineto

 464 388 lineto

 467 393 lineto

 471 397 lineto

 474 400 lineto

 477 402 lineto

 480 403 lineto

 483 402 lineto

 487 400 lineto

 490 397 lineto

 493 393 lineto

 496 388 lineto

 499 382 lineto

 502 374 lineto

 506 366 lineto

 509 357 lineto

 512 347 lineto

 515 336 lineto

 518 324 lineto

 522 312 lineto

 525 300 lineto

 528 287 lineto

 531 273 lineto

 534 260 lineto

 538 246 lineto

DashesProc stroke

1 setlinewidth

[ ] 0 setdash



/DrawSymbolProc {

  gsave

    0.996109 0.644541 0 SetBgColor

    Fill

    0 0 0 SetFgColor

    stroke

  grestore

} def



79 246 9 Ci

82 232 9 Ci

85 219 9 Ci

88 205 9 Ci

91 192 9 Ci

94 180 9 Ci

98 168 9 Ci

101 156 9 Ci

104 145 9 Ci

107 135 9 Ci

110 126 9 Ci

114 118 9 Ci

117 110 9 Ci

120 104 9 Ci

123 99 9 Ci

126 95 9 Ci

130 92 9 Ci

133 90 9 Ci

136 90 9 Ci

139 90 9 Ci

142 92 9 Ci

145 95 9 Ci

149 99 9 Ci

152 104 9 Ci

155 110 9 Ci

158 118 9 Ci

161 126 9 Ci

165 135 9 Ci

168 145 9 Ci

171 156 9 Ci

174 168 9 Ci

177 180 9 Ci

181 192 9 Ci

184 205 9 Ci

187 219 9 Ci

190 232 9 Ci

193 246 9 Ci

196 260 9 Ci

200 273 9 Ci

203 287 9 Ci

206 300 9 Ci

209 312 9 Ci

212 324 9 Ci

216 336 9 Ci

219 347 9 Ci

222 357 9 Ci

225 366 9 Ci

228 374 9 Ci

232 382 9 Ci

235 388 9 Ci

238 393 9 Ci

241 397 9 Ci

244 400 9 Ci

247 402 9 Ci

251 403 9 Ci

254 402 9 Ci

257 400 9 Ci

260 397 9 Ci

263 393 9 Ci

267 388 9 Ci

270 382 9 Ci

273 374 9 Ci

276 366 9 Ci

279 357 9 Ci

283 347 9 Ci

286 336 9 Ci

289 324 9 Ci

292 312 9 Ci

295 300 9 Ci

298 287 9 Ci

302 273 9 Ci

305 260 9 Ci

308 246 9 Ci

311 232 9 Ci

314 219 9 Ci

318 205 9 Ci

321 192 9 Ci

324 180 9 Ci

327 168 9 Ci

330 156 9 Ci

334 145 9 Ci

337 135 9 Ci

340 126 9 Ci

343 118 9 Ci

346 110 9 Ci

349 104 9 Ci

353 99 9 Ci

356 95 9 Ci

359 92 9 Ci

362 90 9 Ci

365 90 9 Ci

369 90 9 Ci

372 92 9 Ci

375 95 9 Ci

378 99 9 Ci

381 104 9 Ci

385 110 9 Ci

388 118 9 Ci

391 126 9 Ci

394 135 9 Ci

397 145 9 Ci

400 156 9 Ci

404 168 9 Ci

407 180 9 Ci

410 192 9 Ci

413 205 9 Ci

416 219 9 Ci

420 232 9 Ci

423 246 9 Ci

426 260 9 Ci

429 273 9 Ci

432 287 9 Ci

436 300 9 Ci

439 312 9 Ci

442 324 9 Ci

445 336 9 Ci

448 347 9 Ci

451 357 9 Ci

455 366 9 Ci

458 374 9 Ci

461 382 9 Ci

464 388 9 Ci

467 393 9 Ci

471 397 9 Ci

474 400 9 Ci

477 402 9 Ci

480 403 9 Ci

483 402 9 Ci

487 400 9 Ci

490 397 9 Ci

493 393 9 Ci

496 388 9 Ci

499 382 9 Ci

502 374 9 Ci

506 366 9 Ci

509 357 9 Ci

512 347 9 Ci

515 336 9 Ci

518 324 9 Ci

522 312 9 Ci

525 300 9 Ci

528 287 9 Ci

531 273 9 Ci

534 260 9 Ci

538 246 9 Ci



% Unset clipping

grestore



0.750011 0.750011 0.750011 SetBgColor

0 0 598 82 Box Fill



0 82 70 329 Box Fill



546 82 52 329 Box Fill



0 411 598 68 Box Fill



0.500008 0.500008 0.500008 SetBgColor

69 410 478 2 Box Fill



545 80 2 332 Box Fill



0.750011 0.750011 0.750011 SetBgColor

newpath 69 412 moveto

69 80 lineto

547 80 lineto

545 82 lineto

71 82 lineto

71 410 lineto

69 412 lineto

69 412  lineto closepath Fill

311 29 0 308 20 BeginText

14 /Helvetica-Bold SetFont

0 0 0 SetFgColor

(Sine and Cosine Functions) 311 0 23 DrawAdjText

EndText

7 16 0 308 463 BeginText

8 /Helvetica SetFont

0 0 0 SetFgColor

(X) 7 0 13 DrawAdjText

EndText

40 16 0 79 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(-360°) 40 0 12 DrawAdjText

EndText

40 16 0 136 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(-270°) 40 0 12 DrawAdjText

EndText

40 16 0 193 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(-180°) 40 0 12 DrawAdjText

EndText

32 16 0 251 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(-90°) 32 0 12 DrawAdjText

EndText

16 16 0 308 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0°) 16 0 12 DrawAdjText

EndText

24 16 0 365 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(90°) 24 0 12 DrawAdjText

EndText

32 16 0 423 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(180°) 32 0 12 DrawAdjText

EndText

32 16 0 480 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(270°) 32 0 12 DrawAdjText

EndText

32 16 0 538 441 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(360°) 32 0 12 DrawAdjText

EndText

0 setlinejoin

0 setlinecap

0 0 0 SetFgColor

1 setlinewidth

[ ] 0 setdash

79 416 538 416 LS

79 416 79 428 LS

136 416 136 428 LS

193 416 193 428 LS

251 416 251 428 LS

308 416 308 428 LS

365 416 365 428 LS

423 416 423 428 LS

480 416 480 428 LS

538 416 538 428 LS

9 16 90 18 246 BeginText

8 /Helvetica SetFont

0.566415 0.171878 0.929702 SetFgColor

(Y) 9 0 13 DrawAdjText

EndText

16 16 90 40 403 BeginText

8 /CourierNewBold-Bold SetFont

0.566415 0.171878 0.929702 SetFgColor

(-1) 16 0 12 DrawAdjText

EndText

32 16 90 40 324 BeginText

8 /CourierNewBold-Bold SetFont

0.566415 0.171878 0.929702 SetFgColor

(-0.5) 32 0 12 DrawAdjText

EndText

8 16 90 40 246 BeginText

8 /CourierNewBold-Bold SetFont

0.566415 0.171878 0.929702 SetFgColor

(0) 8 0 12 DrawAdjText

EndText

24 16 90 40 168 BeginText

8 /CourierNewBold-Bold SetFont

0.566415 0.171878 0.929702 SetFgColor

(0.5) 24 0 12 DrawAdjText

EndText

8 16 90 40 90 BeginText

8 /CourierNewBold-Bold SetFont

0.566415 0.171878 0.929702 SetFgColor

(1) 8 0 12 DrawAdjText

EndText

0 setlinejoin

0 setlinecap

0.566415 0.171878 0.929702 SetFgColor

1 setlinewidth

[ ] 0 setdash

65 403 65 90 LS

65 363 59 363 LS

65 403 53 403 LS

65 285 59 285 LS

65 324 53 324 LS

65 207 59 207 LS

65 246 53 246 LS

65 129 59 129 LS

65 168 53 168 LS

65 90 53 90 LS

8 16 0 79 51 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0) 8 0 12 DrawAdjText

EndText

24 16 0 170 51 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0.2) 24 0 12 DrawAdjText

EndText

24 16 0 262 51 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0.4) 24 0 12 DrawAdjText

EndText

24 16 0 354 51 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0.6) 24 0 12 DrawAdjText

EndText

24 16 0 446 51 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(0.8) 24 0 12 DrawAdjText

EndText

8 16 0 538 51 BeginText

8 /CourierNewBold-Bold SetFont

0 0 0 SetFgColor

(1) 8 0 12 DrawAdjText

EndText

0 setlinejoin

0 setlinecap

0 0 0 SetFgColor

1 setlinewidth

[ ] 0 setdash

79 76 538 76 LS

124 76 124 70 LS

79 76 79 64 LS

216 76 216 70 LS

170 76 170 64 LS

308 76 308 70 LS

262 76 262 64 LS

400 76 400 70 LS

354 76 354 64 LS

492 76 492 70 LS

446 76 446 64 LS

538 76 538 64 LS

8 16 0 572 403 BeginText

8 /CourierNewBold-Bold SetFont

0.800793 0 0.800793 SetFgColor

(0) 8 0 12 DrawAdjText

EndText

24 16 0 580 340 BeginText

8 /CourierNewBold-Bold SetFont

0.800793 0 0.800793 SetFgColor

(0.2) 24 0 12 DrawAdjText

EndText

24 16 0 580 277 BeginText

8 /CourierNewBold-Bold SetFont

0.800793 0 0.800793 SetFgColor

(0.4) 24 0 12 DrawAdjText

EndText

24 16 0 580 215 BeginText

8 /CourierNewBold-Bold SetFont

0.800793 0 0.800793 SetFgColor

(0.6) 24 0 12 DrawAdjText

EndText

24 16 0 580 152 BeginText

8 /CourierNewBold-Bold SetFont

0.800793 0 0.800793 SetFgColor

(0.8) 24 0 12 DrawAdjText

EndText

8 16 0 572 90 BeginText

8 /CourierNewBold-Bold SetFont

0.800793 0 0.800793 SetFgColor

(1) 8 0 12 DrawAdjText

EndText

0 setlinejoin

0 setlinecap

0.800793 0 0.800793 SetFgColor

1 setlinewidth

[ ] 0 setdash

551 403 551 90 LS

551 371 557 371 LS

551 403 563 403 LS

551 309 557 309 LS

551 340 563 340 LS

551 246 557 246 LS

551 277 563 277 LS

551 183 557 183 LS

551 215 563 215 LS

551 121 557 121 LS

551 152 563 152 LS

551 90 563 90 LS

showpage

%Trailer

grestore

end

%EOF

EndEPSF
grestore
gsave
479 408 moveto 8 0 rlineto 0 -8 rlineto -8 0 rlineto closepath
1.000 0.000 0.000 setrgbcolor AdjustColor
fill
grestore
gsave
20 408 moveto 8 0 rlineto 0 -8 rlineto -8 0 rlineto closepath
1.000 0.000 0.000 setrgbcolor AdjustColor
fill
grestore
gsave
10 418 moveto 40 0 rlineto 0 -40 rlineto -40 0 rlineto closepath
0.000 0.000 1.000 setrgbcolor AdjustColor
fill
10 418 moveto 40 0 rlineto 0 -40 rlineto -40 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
1.000 1.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 12 scalefont ISOEncode setfont
1.000 1.000 0.000 setrgbcolor AdjustColor
200 228 [
[(This is a text item)]
] 18 0 0.5 0 false DrawText
grestore
gsave
50 378 moveto 100 0 rlineto 0 -100 rlineto -100 0 rlineto closepath
0.000 1.000 0.000 setrgbcolor AdjustColor
fill
50 378 moveto 100 0 rlineto 0 -100 rlineto -100 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
