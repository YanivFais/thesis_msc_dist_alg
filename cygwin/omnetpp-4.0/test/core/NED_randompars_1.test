%description:
Test random module parameters

%file: test.ned

simple Test
{
    parameters:
        @isNetwork(true);
        volatile double p0 = truncnormal(10, 3);
        volatile double p1 = 1+truncnormal(10, 3);
        double c0 = exponential(1);
        double c1 = 1+exponential(1);
}

%file: test.cc

#include <omnetpp.h>

namespace @TESTNAME@ {

class Test : public cSimpleModule
{
  public:
    Test() : cSimpleModule(16384) { }
    virtual void activity();
};

Define_Module(Test);

void Test::activity()
{
    for (int i=0; i<getNumParams(); i++)
        ev << par(i).getName() << ":" << (par(i).isExpression()?0:1) << ":" << par(i).doubleValue() << "," << par(i).doubleValue() << endl;
}

}; //namespace

%contains-regex: stdout
p0:0:11\.89\d+,11\.371\d+
p1:0:8\.1948\d+,12\.896\d+
c0:1:0\.59999\d+,0\.59999\d+
c1:1:1\.5228\d+,1\.5228\d+
