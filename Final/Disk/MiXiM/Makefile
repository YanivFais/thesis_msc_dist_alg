#
# OMNeT++/OMNEST Makefile for MiXiM
#
# This file was generated with the command:
#  opp_makemake -f --nolink -O out -d examples -d base -d modules -d tests -Xout -L./out/gcc-debug/base -L./out/gcc-debug/modules -L./out/gcc-debug/tests/testUtils
#

# C++ include paths (with -I)
INCLUDE_PATH = -I.

# Output directory
PROJECT_OUTPUT_DIR = out
PROJECTRELATIVE_PATH =
O = $(PROJECT_OUTPUT_DIR)/$(CONFIGNAME)/$(PROJECTRELATIVE_PATH)

# Object files for local .cc and .msg files
OBJS =

# Message files
MSGFILES =

#------------------------------------------------------------------------------

# Pull in OMNeT++ configuration (Makefile.inc or configuser.vc)

ifneq ("$(OMNETPP_CONFIGFILE)","")
CONFIGFILE = $(OMNETPP_CONFIGFILE)
else
ifneq ("$(OMNETPP_ROOT)","")
CONFIGFILE = $(OMNETPP_ROOT)/Makefile.inc
else
CONFIGFILE = $(shell opp_configfilepath)
endif
endif

ifeq ("$(wildcard $(CONFIGFILE))","")
$(error Config file '$(CONFIGFILE)' does not exist -- add the OMNeT++ bin directory to the path so that opp_configfilepath can be found, or set the OMNETPP_CONFIGFILE variable to point to Makefile.inc)
endif

include $(CONFIGFILE)

COPTS = $(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
MSGCOPTS = $(INCLUDE_PATH)

#------------------------------------------------------------------------------
# User-supplied makefile fragment(s)
# >>>
# inserted from file 'makefrag':
# makefrag for top level directory of MiXiM
#
# this file automatically gets inserted into Makefiles generated by opp_makemake

# help output
help:
	@echo
	@echo "*******************************************************************"
	@echo "	Targets are:"
	@echo "	base		-- create base"
	@echo "	modules		-- create modules"
	@echo "	tests		-- create tests "
	@echo "	examples	-- create example networks "
	@echo "	configurator	-- create the configuration tool "
	@echo "	all		-- create all of the above "
	@echo "	docs		-- create documentation "
	@echo "	clean		-- clean  everything up "
	@echo "	distclean	-- get back to pristine fresh state "
	@echo "*******************************************************************"

# make all
all: base_dir modules_dir examples_dir tests_dir

distclean: clean
	@cd configurator &&  $(MAKE) distclean
	@rm -rf out
	@rm -rf doc/api
	@rm -rf doc/neddoc
	@rm -f doc/miximtags.xml
	@rm -f base/Makefile
	@rm -f modules/Makefile
	@rm -f examples/analogueModels/Makefile
	@rm -f examples/Makefile
	@rm -f examples/CSMAMac/Makefile
	@rm -f examples/phyLayer/Makefile
	@rm -f tests/connectionManager/Makefile
	@rm -f tests/Makefile
	@rm -f tests/basePhyLayer/Makefile
	@rm -f tests/blackboard/Makefile
	@rm -f tests/coord/Makefile
	@rm -f tests/baseMobility/Makefile
	@rm -f tests/radioState/Makefile
	@rm -f tests/channelInfo/Makefile
	@rm -f tests/testUtils/Makefile
	@rm -f tests/mapping/Makefile
	@rm -f Makefile

# add dependencies:
modules_dir: base_dir
examples_dir: modules_dir
tests_dir: modules_dir

# documentation
DOC_DIR=doc

# generate all docs (API and neddoc reference)
docs: doxy #neddoc

# generate doxygen API reference
doxy: $(DOC_DIR)/doxy.cfg
	doxygen $(DOC_DIR)/doxy.cfg

# generate neddoc documentation linked to doxygen API reference
#neddoc:
#	opp_neddoc -o $(DOC_DIR)/neddoc -t $(DOC_DIR)/miximtags.xml -d ../api \
#	base/ examples/ modules/ doc/
#
#neddoc-without-doxy:
#	opp_neddoc -o $(DOC_DIR)/neddoc -d ../api base/ examples/ modules/ doc/

# <<<
#------------------------------------------------------------------------------

# Main target

all: $(OBJS) submakedirs Makefile
	@# Do nothing

submakedirs:  examples_dir base_dir modules_dir tests_dir

.PHONY: examples base modules tests
examples: examples_dir
base: base_dir
modules: modules_dir
tests: tests_dir

examples_dir:
	cd examples && $(MAKE)

base_dir:
	cd base && $(MAKE)

modules_dir:
	cd modules && $(MAKE)

tests_dir:
	cd tests && $(MAKE)

.SUFFIXES: .cc

$O/%.o: %.cc
	@mkdir -p $(dir $@)
	$(CXX) -c $(COPTS) -o $@ $<

%_m.cc %_m.h: %.msg
	$(MSGC) -s _m.cc $(MSGCOPTS) $?

msgheaders: $(MSGFILES:.msg=_m.h)
	cd examples && $(MAKE) msgheaders
	cd base && $(MAKE) msgheaders
	cd modules && $(MAKE) msgheaders
	cd tests && $(MAKE) msgheaders

clean:
	-rm -rf $O
	-rm -f MiXiM MiXiM.exe libMiXiM.so libMiXiM.a libMiXiM.dll libMiXiM.dylib
	-rm -f ./*_m.cc ./*_m.h

	-cd examples && $(MAKE) clean
	-cd base && $(MAKE) clean
	-cd modules && $(MAKE) clean
	-cd tests && $(MAKE) clean

cleanall: clean
	-rm -rf $(PROJECT_OUTPUT_DIR)

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile -P\$$O/ -- $(MSG_CC_FILES)  ./*.cc
	-cd examples && if [ -f Makefile ]; then $(MAKE) depend; fi
	-cd base && if [ -f Makefile ]; then $(MAKE) depend; fi
	-cd modules && if [ -f Makefile ]; then $(MAKE) depend; fi
	-cd tests && if [ -f Makefile ]; then $(MAKE) depend; fi

# DO NOT DELETE THIS LINE -- make depend depends on it.

